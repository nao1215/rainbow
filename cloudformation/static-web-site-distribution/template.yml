AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ContentBucketName:
    Type: String
    Description: "S3 Bucket Name"
  
Resources:
  ContentBucket:
    Type: "AWS::S3::Bucket"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref ContentBucketName
      VersioningConfiguration:
        Status: Enabled
      ObjectLockConfiguration:
        ObjectLockEnabled: Enabled
        Rule:
          DefaultRetention:
            Days: 1
            Mode: GOVERNANCE
      ObjectLockEnabled: true
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      ReplicationConfiguration:
        Role: !GetAtt ContentBucketReplicationRole.Arn
        Rules:
          - Destination:
              Bucket: !Ref ContentS3BucketReplica
            Status: Enabled
            Prefix: "replicated/"
      LoggingConfiguration:
        DestinationBucketName: !Ref ReplicationLogBucket
        LogFilePrefix: "logs/"

  ContentBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ContentBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowSSLRequestsOnly
            Action: "s3:*"
            Effect: Deny
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${ContentBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${ContentBucket}/*"
            Condition:
              Bool:
                "aws:SecureTransport": false
              NumericLessThan:
                "s3:TlsVersion": "1.2"
            Principal: "*"

  ContentBucketReplicationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-bucket-source-role-${AWS::Region}"
      Description: "Role For S3"
      Path: "/service/"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - s3.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"

  ContentS3BucketReplica:
    Type: "AWS::S3::Bucket"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      BucketName: "content-s3-bucket-replica"
      ObjectLockConfiguration:
        ObjectLockEnabled: Enabled
        Rule:
          DefaultRetention:
            Days: 1
            Mode: GOVERNANCE
      ObjectLockEnabled: true
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    Metadata:
      guard:
        SuppressedRules:
        - S3_BUCKET_REPLICATION_ENABLED
        - S3_BUCKET_LOGGING_ENABLED


  ContentBucketReplicaPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ContentS3BucketReplica
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowSSLRequestsOnly
            Action: "s3:*"
            Effect: Deny
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${ContentS3BucketReplica}"
              - !Sub "arn:${AWS::Partition}:s3:::${ContentS3BucketReplica}/*"
            Condition:
              Bool:
                "aws:SecureTransport": false
              NumericLessThan:
                "s3:TlsVersion": "1.2"
            Principal: "*"
