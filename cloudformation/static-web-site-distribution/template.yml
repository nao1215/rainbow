AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ContentBucketName:
    Type: String
    Description: "S3 Bucket Name"
  
Resources:
  ContentBucket:
    Type: "AWS::S3::Bucket"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "${ContentBucketName}"
      VersioningConfiguration:
        Status: Enabled
      ObjectLockEnabled: true
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  ContentBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ContentBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "DenyNonSecureConnections"
            Action: "s3:*"
            Effect: Deny
            Principal: "*"
            Resource:
              - !Sub "arn:aws:s3:::${ContentBucketName}/*"
              - !Sub "arn:aws:s3:::${ContentBucketName}"
            Condition:
              Bool:
                "aws:SecureTransport": false
          - Sid: "AllowCloudFrontToGetContent"
            Effect: Allow
            Principal:
              Service: "cloudfront.amazonaws.com"
            Action: 
              - "s3:GetObject"
              - "s3:ListBucket"
            Resource:
              - !Sub "arn:aws:s3:::${ContentBucketName}/*"
              - !Sub "arn:aws:s3:::${ContentBucketName}"
            Condition:
              Bool:
                "aws:SecureTransport": true

  LogBucket:
    Type: "AWS::S3::Bucket"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "${ContentBucketName}-log"
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      ObjectLockConfiguration:
        ObjectLockEnabled: Enabled
        Rule:
          DefaultRetention:
            Days: 1
            Mode: GOVERNANCE
      ObjectLockEnabled: true
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter

  CloufFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Comment: "CloudFront Distribution"
        Origins:
          - DomainName: !GetAtt ContentBucket.RegionalDomainName
            Id: "S3Origin"
            OriginAccessControlId: !Ref CloudFrontOriginAccessControl
            S3OriginConfig:
              OriginAccessIdentity: ""
        DefaultRootObject: "index.html"
        Enabled: true
        DefaultCacheBehavior:
          TargetOriginId: "S3Origin"
          CachePolicyId: !Ref OriginCachePolicy
          OriginRequestPolicyId: !Ref OriginRequestPolicy
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          ForwardedValues:
            QueryString: false
          ViewerProtocolPolicy: "redirect-to-https"
          DefaultTTL: 1
          MaxTTL: 1
          MinTTL: 1
        PriceClass: "PriceClass_100"
        Logging:
          Bucket: !GetAtt LogBucket.DomainName
          IncludeCookies: false
          Prefix: "logs/"
        HttpVersion: "http2and3"
        IPV6Enabled: true
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

  CloudFrontOriginAccessControl:
    Type: "AWS::CloudFront::OriginAccessControl"
    Properties:
      OriginAccessControlConfig:
        Name: "Origin Accress Control for S3 bucket"
        OriginAccessControlOriginType:  s3
        SigningBehavior: always
        SigningProtocol: sigv4

  OriginRequestPolicy:
    Type: "AWS::CloudFront::OriginRequestPolicy"
    Properties:
      OriginRequestPolicyConfig:
        Name: !Sub "${AWS::StackName}-cloudfront-request-policy"
        Comment: "Origin Request Policy for S3 bucket"
        CookiesConfig:
          CookieBehavior: none
        HeadersConfig:
          HeaderBehavior: none
        QueryStringsConfig:
          QueryStringBehavior: none

  OriginCachePolicy:
    Type: "AWS::CloudFront::CachePolicy"
    Properties:
      CachePolicyConfig:
        Name: !Sub "${AWS::StackName}-cloudfront-cache-policy"
        Comment: "Cache Policy for S3 bucket"
        DefaultTTL: 1
        MaxTTL: 1
        MinTTL: 1
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none
          EnableAcceptEncodingGzip: true
          EnableAcceptEncodingBrotli: true
